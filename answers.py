# -*- coding: utf-8 -*-
"""answers.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A9PmY96g5c3f5coz3JUsLvgBM4jgThG-

# CMPS 6610 Problem Set 01
## Answers

**Name:** Adam Ledet

Place all written answers from `assignment-01.md` here for easier grading.

1. **Asymptotic notation**

  - 1a - Yes. As an example, let us look at every value of n from 1 to infinity, 2^(n+1) ≤ c·2^n. For any c value above 1, we will always get a true statement.

  - 1b - No. As a counter example, let us look at c=5 and every value of n. 2^(2^n) ≤ 5·2^(n). While this is true at n=1 and n=2, at any value of n=3 or larger, the statement is false.

  - 1c - No. Logs are always better performing than any exponent. Let us look at c=10 in this example. n^(1.01) ≤ 10·log(n)^2 for every value of n. At n=1, our results are 1≤0 which is false, but as our n increases, n^1.01 asymptotically dominates c·log(n)^2 and is true at every occurence.

  - 1d - Yes. This is the reverse of the previous problem and asks if n^1.01 asymptotically dominates c·log(n)^2. Any exponent will always outgrow any log.

  - 1e - Yes. Let us look at the example c=2 and n={10, 20, 30} for sqrt(n)≤c·log(n)^3. At n=10, we have 3.16≤2; at n=20, we have 4.47≤4.20; but at n=30, we have 5.48≤6.44. This value will be true at every larger value of n showing asymptotic dominance of the log over our square root function.

  - 1f - No. This is the reverse of the above problem.

  - 1g

2. **SPARC to Python**

  - 2b

3. **Parallelism and recursion**

  - 3b

  - 3d

  - 3e
  
4. **GCD**
"""